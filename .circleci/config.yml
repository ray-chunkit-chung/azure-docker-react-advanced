version: 2.1

# Define test and build commands
commands:
  build:
    steps:
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - checkout
      - run: echo "this is the build job"
      - run:
          name: Build to dockerhub for test
          command: |
            docker build -t $DOCKER_USERNAME/azure-docker-react-advanced-dev:latest .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push $DOCKER_USERNAME/azure-docker-react-advanced-dev:latest
  test:
    # steps:
    #   - checkout
    #   - run: echo "this is the test job"
    #   - run:
    #       name: install dependencies
    #       command: yarn install
    #   - run:
    #       name: unit test
    #       command: yarn test
    steps:
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - run: echo "this is the test job"
      - run:
          name: unit test
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker run $DOCKER_USERNAME/azure-docker-react-advanced-dev:latest sh -c "echo hello"
  deploy:
    steps:
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - checkout
      - run: echo "this is the deploy job"
      - run:
          name: Push tested image to auto-deploy
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker pull $DOCKER_USERNAME/azure-docker-react-advanced-dev:latest
            docker push $DOCKER_USERNAME/azure-docker-react-advanced:latest

# Define the executors for this project
executors:
  build-executor:
    docker:
      - image: circleci/openjdk:latest
  test-executor:
    docker:
      - image: circleci/node:latest

# Define the jobs we want to run for this project
jobs:
  # Specify build executors
  build-with-docker:
    executor: build-executor
    steps:
      - build
  # Specify test executors
  test-with-docker:
    executor: test-executor
    steps:
      - test
  # Specify deploy build executors
  deploy-with-docker:
    executor: build-executor
    steps:
      - deploy

# Orchestrate our job run sequence
workflows:
  build_and_test:
    jobs:
      - build-with-docker
      - test-with-docker:
          requires:
            - build-with-docker
      - deploy-with-docker:
          requires:
            - test-with-docker
